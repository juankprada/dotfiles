#!/bin/sh

# shellcheck disable=SC2250  # Prefer putting braces around variable references even when not strictly required

if type kerl_deactivate 2>/dev/null | \grep -qw function; then
    kerl_deactivate
fi

_KERL=/home/juankprada/.local/bin/kerl
if [ -n "$_KERL" ]; then
    _KERL_VERSION=$($_KERL version)
fi
if [ -n "$_KERL_VERSION" ] && [ "$_KERL_VERSION" != "4.2.0" ]; then
    echo "WARNING: this Erlang/OTP installation appears to be stale. Please consider reinstalling."
    echo "         It was created with kerl 4.2.0, and the current version is $_KERL_VERSION."
fi
unset _KERL_VERSION
unset _KERL

add_cleanup() {
    _KERL_CLEANUP="
    $1
    $_KERL_CLEANUP
    "
}

set -o allexport

_KERL_ACTIVE_DIR="/home/juankprada/.local/bin/erlang/27.0.1"
add_cleanup "unset _KERL_ACTIVE_DIR"

if [ -n "$BASH" ] || [ -n "$ZSH_VERSION" ]; then
    add_cleanup "hash -r"
fi

_KERL_PATH_REMOVABLE="/home/juankprada/.local/bin/erlang/27.0.1/bin"
PATH="${_KERL_PATH_REMOVABLE}:$PATH"
add_cleanup "PATH=\"\$(echo \"\$PATH\" | sed -e \"s%$_KERL_PATH_REMOVABLE:%%\")\""
unset _KERL_PATH_REMOVABLE

_KERL_ERL_CALL_REMOVABLE=$(\find /home/juankprada/.local/bin/erlang/27.0.1 -type d -path "*erl_interface*/bin" 2>/dev/null)
if [ -n "$_KERL_ERL_CALL_REMOVABLE" ]; then
    PATH="${_KERL_ERL_CALL_REMOVABLE}:$PATH"
    add_cleanup "PATH=\"\$(echo \"\$PATH\" | sed -e \"s%$_KERL_ERL_CALL_REMOVABLE:%%\")\""
fi
unset _KERL_ERL_CALL_REMOVABLE

_KERL_MANPATH_REMOVABLE="/home/juankprada/.local/bin/erlang/27.0.1/lib/erlang/man:/home/juankprada/.local/bin/erlang/27.0.1/man"
if [ -n "${MANPATH+x}" ]; then
    if [ -n "$MANPATH" ]; then
        MANPATH="${_KERL_MANPATH_REMOVABLE}:$MANPATH"
    else
        MANPATH="${_KERL_MANPATH_REMOVABLE}"
    fi
else
    MANPATH="${_KERL_MANPATH_REMOVABLE}"
    add_cleanup "
        if [ -z \"\$MANPATH\" ]; then
            unset MANPATH
        fi
    "
fi
add_cleanup "MANPATH=\"\$(echo \"\$MANPATH\" | sed -r \"s%$_KERL_MANPATH_REMOVABLE:?%%\")\""
unset _KERL_MANPATH_REMOVABLE

if [ -n "${REBAR_PLT_DIR+x}" ]; then
    add_cleanup "REBAR_PLT_DIR=\"$REBAR_PLT_DIR\""
else
    add_cleanup "unset REBAR_PLT_DIR"
fi
REBAR_PLT_DIR="/home/juankprada/.local/bin/erlang/27.0.1"

if [ -n "${REBAR_CACHE_DIR+x}" ]; then
    add_cleanup "REBAR_CACHE_DIR=\"$REBAR_CACHE_DIR\""
else
    add_cleanup "unset REBAR_CACHE_DIR"
fi
REBAR_CACHE_DIR="/home/juankprada/.local/bin/erlang/27.0.1/.cache/rebar3"

# https://twitter.com/mononcqc/status/877544929496629248
_KERL_KERNEL_HISTORY=$(echo "$ERL_AFLAGS" | \grep 'kernel shell_history' || true)
if [ -z "$_KERL_KERNEL_HISTORY" ]; then
    if [ -n "${ERL_AFLAGS+x}" ]; then
        add_cleanup "ERL_AFLAGS=\"$ERL_AFLAGS\""
    else
        add_cleanup "unset ERL_AFLAGS"
    fi
    if [ -n "$ERL_AFLAGS" ]; then
        ERL_AFLAGS="-kernel shell_history enabled $ERL_AFLAGS"
    else
        ERL_AFLAGS="-kernel shell_history enabled"
    fi
fi
unset _KERL_KERNEL_HISTORY

# shellcheck source=/dev/null
if [ -f "/home/juankprada/.kerlrc" ]; then
    . "/home/juankprada/.kerlrc"
fi
if [ -n "$KERL_ENABLE_PROMPT" ]; then
    if [ -n "${PS1+x}" ]; then
        add_cleanup "PS1=\"$PS1\""
    else
        add_cleanup "unset PS1"
    fi
    if [ -n "$KERL_PROMPT_FORMAT" ]; then
        _KERL_PROMPT_FORMAT="$KERL_PROMPT_FORMAT"
    else
        _KERL_PROMPT_FORMAT="(%BUILDNAME%)"
    fi
    _KERL_PRMPT=$(echo "$_KERL_PROMPT_FORMAT" | sed 's^%RELEASE%^27.0.1^;s^%BUILDNAME%^27.0.1^')
    PS1="$_KERL_PRMPT$PS1"
    unset KERL_ENABLE_PROMPT
    unset KERL_PROMPT_FORMAT
    unset _KERL_PRMPT
    unset _KERL_PROMPT_FORMAT
fi

if [ -n "$BASH" ] || [ -n "$ZSH_VERSION" ]; then
    hash -r
fi

set +o allexport

unset add_cleanup

eval "
kerl_deactivate() {
    set -o allexport
    $_KERL_CLEANUP
    unset -f kerl_deactivate
    set +o allexport
}
"
unset _KERL_CLEANUP
