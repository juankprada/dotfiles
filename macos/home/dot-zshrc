export TERM="xterm-256color"                      # getting proper colors
export HISTCONTROL=ignoredups:erasedups           # no duplicate entries
export ALTERNATE_EDITOR=""                        # setting for emacsclient
export EDITOR="emacsclient -t -a ''"              # $EDITOR use Emacs in terminal
export VISUAL="emacsclient -c -a emacs"           # $VISUAL use Emacs in GUI mode
export LANG="en_US.UTF-8"


### PATH
if [ -d "$HOME/bin" ] ;
then PATH="$HOME/bin:$PATH"
fi

if [ -d "$HOME/.bin" ] ;
then PATH="$HOME/.bin:$PATH"
fi

if [ -d "$HOME/.local/bin" ] ;
then PATH="$HOME/.local/bin:$PATH"
fi

if [ -d "$HOME/.emacs.d/bin" ] ;
then PATH="$HOME/.emacs.d/bin:$PATH"
fi

if [ -d "$HOME/Applications" ] ;
then PATH="$HOME/Applications:$PATH"
fi

if [ -d "/var/lib/flatpak/exports/bin/" ] ;
then PATH="/var/lib/flatpak/exports/bin/:$PATH"
fi

if [ -d "$HOME/.config/emacs/bin/" ] ;
then PATH="$HOME/.config/emacs/bin/:$PATH"
fi


if [ -d "$HOME/Development/flutter/bin/" ] ;
then PATH="$HOME/Development/flutter/bin:$PATH"
fi

# Let's ge tht Gems rolling
if [ -d "$HOME/.gem/bin/" ] ;
then PATH="$HOME/.gem/bin:$PATH"
fi



### Custom Functions
### ========================================

### COUNTDOWN
cdown () {
    N=$1
  while [[ $((--N)) >  0 ]]
    do
        echo "$N" |  figlet -c | lolcat &&  sleep 1
    done
}


catr() {
    tail -n "+$1" $3 | head -n "$(($2 - $1 + 1))"
}


### Validate a YAML file
validateYaml() {
    python -c 'import yaml,sys;yaml.safe_load(sys.stdin)' < $1
}



## Archive extraction
# usage: ex <file>
ex ()
{
  if [ -f "$1" ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1   ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *.deb)       ar x $1      ;;
      *.tar.xz)    tar xf $1    ;;
      *.tar.zst)   unzstd $1    ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

## Commit Dotfiles TODO: needs review for macos setup
commitDotFiles() {
    pushd $DOTFILES
    git add .
    git commit -m "automagic messaging generated by you. If this braks its your fault!"
    git push origin main
    popd
}


### Aliases
### ========================================

export MANPAGER="sh -c 'col -bx | bat -l man -p'"

alias work="cd ~/Documents/work"
alias personal="cd ~/Documents/Projects/"

alias dotFileInstall="$DOTFILES/install"

alias connect_to_vps="ssh juankprada@153.92.1.75"


# vim and emacs


alias vim="nvim"
alias emacsbin="/Applications/Emacs.app/Contents/MacOS/Emacs"
alias emacs="emacsclient -n -r -a 'emacsbin'"
alias em="emacsclient -nw"

alias my_ip="ip address | grep -o \"inet 192.*/\" | awk '{ print \$2 }' | tr / ' ' | xargs"

# Changing "ls" to "exa"
alias ls='eza -al --color=always --group-directories-first' # my preferred listing
alias la='eza -a --color=always --group-directories-first'  # all files and dirs
alias ll='eza -l --color=always --group-directories-first'  # long format
alias lt='eza -aT --color=always --group-directories-first' # tree listing
alias l.='eza -a | grep -E "^\."'

alias df='df -h'                          # human-readable sizes

# Colorize grep output (good for log files)
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'

# confirm before overwriting something
alias cp="cp -i"
alias mv='mv -i'
alias rm='rm -i'

# ps
alias psa="ps auxf"
alias psgrep="ps aux | grep -v grep | grep -i -e VSZ -e"
alias psmem='ps aux | sort -nr -k 4'
alias pscpu='ps aux | sort -nr -k 3'


### Custom Shells and environment settings
### ========================================

# Startship for Zsh
eval "$(starship init zsh)"

# Ruby Environment (rbenv)
eval "$(rbenv init - zsh)"

# Specific setting for Flutter SDK
export PATH=$HOME/Development/flutter/bin:$PATH

# Let's ge tht Gems rolling
export PATH=$HOME/.gem/bin:$PATH

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

autoload -Uz compinit
zstyle ':completion:*' menu select
fpath+=~/.zfunc
